


ARM Macro Assembler    Page 1 


    1 00000000         ;2. Using ARM assembly, Check whether a decimal number s
                       tored in 4000 0000h is an Armstrong number or not. examp
                       le: 371(3**3+7**3+1**1)
    2 00000000         
    3 00000000                 AREA             my_code,CODE,READONLY
    4 00000000                 ENTRY
    5 00000000         
    6 00000000         MAIN
    7 00000000 E3A00101        LDR              R0,=0x40000000 ; Load the addre
                                                            ss value to the reg
                                                            ister
    8 00000004 E5901000        LDR              R1,[R0]     ; Load the contents
                                                             to register R1
    9 00000008 E1A03001        MOV              R3,R1       ; Keep a copy at Re
                                                            gister R3
   10 0000000C E3A0A000        LDR              R10,=0      ; Clear the content
                                                            s of R10
   11 00000010         
   12 00000010         LOOP1
   13 00000010 E3510009        CMP              R1,#9       ; Check if the rema
                                                            inder is less than 
                                                            9
   14 00000014 DA000005        BLE              LAST        ; If yes then compu
                                                            te cube of the last
                                                             digit
   15 00000018 EB000008        BL               DIV         ; Branch to DIV
   16 0000001C E0080191        MUL              R8,R1,R1    ; Compute the cube
   17 00000020 E0090198        MUL              R9,R8,R1    ; Store the cube in
                                                             R9 (R9=R1*R1*R1)
   18 00000024 E08AA009        ADD              R10,R10,R9  ; R10=R10+R9
   19 00000028 E1A01002        MOV              R1,R2       ; Move the Quotient
                                                             to R1
   20 0000002C EAFFFFF7        B                LOOP1       ; Iterative Loop
   21 00000030         
   22 00000030         LAST
   23 00000030 E0080191        MUL              R8,R1,R1    ; Finding Cube
   24 00000034 E0090198        MUL              R9,R8,R1    ; Store the Result 
                                                            in R9 (R9=R1*R1*R1)
                                                            
   25 00000038 E08AA009        ADD              R10,R10,R9  ; R10=R10+R9
   26 0000003C EA000005        B                ARMSTRONG   ; Branch to Armstro
                                                            ng to check if the 
                                                            number is ARMSTRONG
                                                             or NOT
   27 00000040         DIV
   28 00000040 E3A02000        MOV              R2,#0       ; Make R2=0
   29 00000044         
   30 00000044         LOOP
   31 00000044 E3510009        CMP              R1,#9       ; Check if the rema
                                                            inder is less than 
                                                            9
   32 00000048 D12FFF1E        BXLE             LR          ; Sub Routine is us
                                                            ed and will branch 
                                                            to the next instruc
                                                            tion if less than.
   33 0000004C E241100A        SUB              R1,R1,#10   ; Repeated Division
                                                            
   34 00000050 E2822001        ADD              R2,R2,#1    ; Increment the val
                                                            ue to get the quoti



ARM Macro Assembler    Page 2 


                                                            ent
   35 00000054 EAFFFFFA        B                LOOP        ; Iteratively perfo
                                                            rm until condition 
                                                            fails
   36 00000058         
   37 00000058         ARMSTRONG
   38 00000058 E15A0003        CMP              R10,R3      ; Check if the numb
                                                            ers are equal 
   39 0000005C 1A000001        BNE              NOT_ARMSTRONG ; If not equal br
                                                            anch to NOT ARMSTRO
                                                            NG 
   40 00000060 E3A05001        LDR              R5,=1       ; Make R5=1(true) i
                                                            f the number is ARM
                                                            STRONG
   41 00000064 EA000000        B                STOP
   42 00000068         
   43 00000068         NOT_ARMSTRONG
   44 00000068 E3A05000        LDR              R5,=0       ; Make R5=0(false) 
                                                            if the number is NO
                                                            T ARMSTRONG
   45 0000006C         
   46 0000006C EAFFFFFE 
                       STOP    B                STOP
   47 00000070         
   48 00000070                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\armstrong.d -o.\objects\armstrong.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_
v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" -
-predefine="__UVISION_VERSION SETA 529" --list=.\listings\armstrong.lst Armstro
ng.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARMSTRONG 00000058

Symbol: ARMSTRONG
   Definitions
      At line 37 in file Armstrong.s
   Uses
      At line 26 in file Armstrong.s
Comment: ARMSTRONG used once
DIV 00000040

Symbol: DIV
   Definitions
      At line 27 in file Armstrong.s
   Uses
      At line 15 in file Armstrong.s
Comment: DIV used once
LAST 00000030

Symbol: LAST
   Definitions
      At line 22 in file Armstrong.s
   Uses
      At line 14 in file Armstrong.s
Comment: LAST used once
LOOP 00000044

Symbol: LOOP
   Definitions
      At line 30 in file Armstrong.s
   Uses
      At line 35 in file Armstrong.s
Comment: LOOP used once
LOOP1 00000010

Symbol: LOOP1
   Definitions
      At line 12 in file Armstrong.s
   Uses
      At line 20 in file Armstrong.s
Comment: LOOP1 used once
MAIN 00000000

Symbol: MAIN
   Definitions
      At line 6 in file Armstrong.s
   Uses
      None
Comment: MAIN unused
NOT_ARMSTRONG 00000068

Symbol: NOT_ARMSTRONG
   Definitions
      At line 43 in file Armstrong.s
   Uses
      At line 39 in file Armstrong.s
Comment: NOT_ARMSTRONG used once
STOP 0000006C

Symbol: STOP



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 46 in file Armstrong.s
   Uses
      At line 41 in file Armstrong.s
      At line 46 in file Armstrong.s

my_code 00000000

Symbol: my_code
   Definitions
      At line 3 in file Armstrong.s
   Uses
      None
Comment: my_code unused
9 symbols
341 symbols in table
